{{- $config := .Values.thanos_receive -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: thanos-secret
  labels:
    app: {{ $config.name }}
    release: {{ .Release.Name }}
type: Opaque
stringData:
  thanos_conf.yaml: |
    type: S3
    config:
      bucket: thanos
      endpoint: "{{ .Values.minio.service.name }}:{{ .Values.minio.service.externalPort }}"
      access_key: "{{ .Values.minio.credentials.access }}"
      secret_key: "{{ .Values.minio.credentials.secret }}"
      insecure: true
    prefix: "data"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $config.name }}-limits-config
  labels:
    app: {{ $config.name }}
    release: {{ .Release.Name }}
data:
  thanos_limits.yaml: |
    write:
      global:
        max_concurrency: {{ $config.maxConcurrency }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $config.service.name }}
  labels:
    app: {{ $config.name }}
    release: {{ .Release.Name }}
spec:
  type: {{ $config.service.type }}
  ports:
    - port: {{ $config.service.httpExternalPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ $config.service.grpcExternalPort }}
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: {{ $config.service.remoteWriteExternalPort }}
      targetPort: remote
      protocol: TCP
      name: remote
  selector:
    app: {{ $config.name }}
    release: {{ .Release.Name }}
---
# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: {{ $config.name }}
#   labels:
#     type: {{$config.storageClassName}}
#   annotations:
#     volume.alpha.kubernetes.io/storage-class: {{ $config.storageClassName }}
# spec:
#   storageClassName: {{ $config.storageClassName }}
#   capacity:
#     storage: {{ $config.dataSize }}
#   accessModes:
#     - ReadWriteOnce
# {{- if  eq  $config.storageClassName "local-storage" }}
#   persistentVolumeReclaimPolicy: Recycle
#   hostPath:
#     path: "/optscale/{{ $config.name }}"
# {{- end }}
# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: {{ $config.name }}-claim
# spec:
#   storageClassName: {{ $config.name }}
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: {{ $config.dataSize }}
# ---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $config.service.name }}
  labels:
    app: {{ $config.name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ $config.replicaCount }}
  podManagementPolicy: OrderedReady
  serviceName: {{ $config.service.name }}
  selector:
    matchLabels:
      app: {{ $config.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $config.name }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
{{- if .Values.elk.enabled }}
{{ include "wait_for_elk" . | indent 6 }}
{{- end }}
{{ include "wait_for_service" .Values.minio | indent 6 }}
      containers:
        - name: receive
          imagePullPolicy: "{{ $config.image.pullPolicy }}"
          image: "thanosio/thanos:v0.31.0"
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - containerPort: 10901
              name: grpc
              protocol: TCP
            - containerPort: 10902
              name: http
              protocol: TCP
            - containerPort: 19291
              name: remote
              protocol: TCP
          resources:
            limits:
              memory: {{ $config.memory_limit }}Mi
          command:
            - thanos
          args:
            - receive
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --remote-write.address=0.0.0.0:19291
            - --objstore.config-file=/var/thanos/config/thanos_conf.yaml
            - --tsdb.path=/var/thanos/receive
            - --tsdb.retention={{ $config.tsdbRetention }}
            - --tsdb.wal-compression
            - --tsdb.no-lockfile
            # - --tsdb.too-far-in-future.time-window=1h  # TODO: uncomment me later
            - --tsdb.out-of-order.time-window=1h
            - --label=receive="$(NAME)"
            - --receive.tenant-header=Cloud-Account-Id
            - --receive-forward-timeout=2m
            - --log.level=info
            - --receive.limits-config-file=/var/thanos/limits_config/thanos_limits.yaml
            - --tsdb.memory-snapshot-on-shutdown
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /var/thanos/receive
            - name: config
              mountPath: /var/thanos/config
              readOnly: true
            - name: limits-config
              mountPath: /var/thanos/limits_config
      volumes:
        - name: config
          secret:
            secretName: thanos-secret
            items:
            - key: thanos_conf.yaml
              path: thanos_conf.yaml
        - name: limits-config
          configMap:
            name: {{ $config.name }}-limits-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ $config.dataSize }} 